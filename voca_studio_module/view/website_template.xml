<odoo>
    <data>
        <template id="voca_studio_module.teacher_login_restriction" name="Teacher Login Restriction">
            <t t-call="portal.portal_layout">
                <div class="container mt16">
                    <div class="alert alert-danger">
                        <h3>Access Denied</h3>
                        <p>You are not allowed to log in because your request is pending.</p>
                    </div>
                </div>
            </t>
        </template>


        <template id="new" inherit_id="website_sale.product_quantity" name="Select Quantity">
            <xpath expr="//input[@name='add_qty']" position="inside">
                <script>
                    document.getElementsByClassName('css_quantity')[0].style='display: none !important'
                    document.getElementsByClassName('product_price')[0].style='display: none !important'
                    document.getElementsByClassName('breadcrumb')[0].style='display: none !important'
                    document.getElementById('product_detail_main').previousElementSibling.style='display: none !important'
                    <!--                    document.getElementsByClassName('o_wsale_product_images')[0].class='col-lg-8 mt-lg-4 o_wsale_product_images position-relative'-->
                </script>

            </xpath>


            <xpath expr="//input[@name='add_qty']" position="attributes">
                    <attribute name="t-att-value" remove="add_qty or 1" add="request.session.get('package_id').get('quantity')"/>
            </xpath>

            <xpath expr="//input[@name='add_qty']" position="attributes">
                <attribute name="id">quantity</attribute>
            </xpath>


        </template>


        <template id="ecom_hide_fields" inherit_id="website_sale.product" active="True" name="Hide Extra Fields">

            <xpath expr="//div[@id='add_to_cart_wrap']" position="replace">
                <div id="add_to_cart_wrap"
                     style="pointer-events: none; opacity: 0.5;"
                     t-attf-class="{{'d-none' if combination_info['prevent_zero_price_sale'] else 'd-inline-flex'}} align-items-center mb-2 me-auto">
                    <a data-animation-selector=".o_wsale_product_images" role="button" id="add_to_cart"
                       t-attf-class="btn btn-primary js_check_product a-submit flex-grow-1" href="#">
                        <i class="fa fa-calendar me-2"/>
                        Book Now
                    </a>
                </div>

            </xpath>
            <xpath expr="//div[@id='add_to_cart_wrap']" position="before">
                <div class="mt-3 mb-3 w-100">
                        <t t-out="product.product_variant_id.is_master"/>
                    <h3 t-if="product.product_variant_id.is_master">
                        <strong t-field="product.currency_id"/>
                        <span class="text-secondary" t-field="product.list_price"/>
                    </h3>

                    <h3 t-else="">
                        <strong t-field="product.currency_id"/>
                        <span class="text-secondary" t-out="request.session.get('package_id').get('price')"/>
                    </h3>

                </div>
            </xpath>
        </template>
        <template id="carousel_product" inherit_id="website_sale.shop_product_carousel" name="Carousel Product ">
            <!--                    <xpath expr="//div[@class='o_carousel_product_outer carousel-outer position-relative flex-grow-1 overflow-hidden'][1]"-->
            <!--                           position="replace">-->


            <!--                    </xpath>-->
        </template>


        <template id="hide_image" inherit_id="website_sale.product" active="True" name="Hide Image">
            <!--            <xpath expr="//div[hasclass('o_wsale_product_images')]" position="attributes">-->
            <!--                <attribute name="class" remove="col-lg-6" add="col-lg-8" separator=" "/>-->

            <!--            </xpath>-->

            <xpath expr="//div[@id='product_detail_main'][1]/div[1]/t[1]" position="replace">

                <style>
                    /* Style for the list */
                    .available-days-list {
                    list-style-type: none; /* Remove default bullet points */
                    padding: 0;
                    }

                    .available-days-list .day-item {
                    padding: 10px;
                    margin-bottom: 5px;
                    background-color: #f8f9fa; /* Light background for list items */
                    border: 1px solid #ddd;
                    border-radius: 5px;
                    font-size: 1.1rem;
                    cursor: pointer;
                    }

                    .available-days-list .day-item:hover {
                    background-color: #e9ecef; /* Slightly darker on hover */
                    }

                    /* Hide available times initially */
                    .available-times {
                    display: none;
                    margin-top: 10px;
                    background-color: #fff;
                    border: 1px solid #ddd;
                    padding: 10px;
                    border-radius: 5px;
                    }

                    /* Show available times when the div is clicked */
                    .available-times.show {
                    display: block;
                    }

                    /* Style for selected time */
                    .available-times ul li.selected {
                    background-color: #007bff; /* Blue background for selected time */
                    color: white; /* White text for selected time */
                    cursor: pointer;
                    }

                    .available-times ul li:hover {
                    background-color: #e9ecef; /* Slightly darker on hover */
                    cursor: pointer;
                    }

                    /* Disabled day item */
                    .day-item.disabled {
                    pointer-events: none;
                    opacity: 0.6; /* Make disabled days look faded */
                    }

                    /* Disabled time slot */
                    .available-times ul li.disabled {
                    pointer-events: none;
                    opacity: 0.6; /* Make disabled time slots look faded */
                    }
                </style>
                <t t-set="teacher"
                   t-value="request.env['voca.teacher'].sudo().search([('product_id', '=', product.product_variant_id.id)])"/>
                <t t-set="master"
                   t-value="request.env['master.classes'].sudo().search([('product_id', '=', product.product_variant_id.id)])"/>
                <input type="hidden" t-att-value="product.id" id="product"></input>
                <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet"/>
                <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
                <div id="available_days_container" style="display: none;">
                    <h3>Available Days:</h3>
                    <div id="available_days" class="d-flex flex-wrap">
                        <t t-foreach="master.dates_ids" t-as="date_record">
                            <span class="badge bg-secondary me-1">
                                <t t-esc="date_record.date.strftime('%Y-%m-%d')"/>
                            </span>
                        </t>
                    </div>
                </div>
                <div id="calendar" style="width:100%"></div>
                <style>
                    .selected-booking {
                    background-color: #4CAF50 !important; /* Green background */
                    color: white !important; /* White text */
                    }
                </style>
                <input type="hidden" id="selected_bookings" name="selected_bookings" value=""/>


                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                    let teacher_id = document.getElementById('product').value;
                    let tt = document.getElementById('product');
                    let availableDaysContainer = document.getElementById('available_days_container');
                    let availableDaysEl = document.getElementById('available_days');
                    let selectedBookings = {}; // To store clicked bookings and associated quantities


                    console.info('product master ------', tt);

                    $.ajax({
                    url: '/check_master_product',
                    data: {
                    product_id: teacher_id // Replace teacher_id with the actual product ID
                    },
                    dataType: 'json',
                    success: function(response) {
                    console.info('response : ', response);

                    let calendarEl = document.getElementById('calendar');
                    let calendar;

                    if (response.is_master) {
                      let quantityInput = document.getElementById('quantity');
                    if (quantityInput) {
                        quantityInput.value = 1; // Change 5 to the desired default value for master products
                    }
                    // Initialize the calendar without time slots (for master product)
                    document.getElementById('add_to_cart_wrap').style.pointerEvents = 'auto';
                    document.getElementById('add_to_cart_wrap').style.opacity = '2';
                    calendarEl.style.display = 'none';
                    availableDaysContainer.style.display = 'block';
                    $.ajax({
                    url: `/online-booking/master/`,
                    data: {
                    product_id: teacher_id
                    },
                    dataType: 'json',
                    success: function(result) {
                    // Prepare events array
                    let events = result.map(item => ({
                    title: item.name,
                    start: item.date, // The date is already in ISO string format
                    allDay: true
                    }));
                    console.info('events:', events);

                    // Add events to the calendar
                    <!--                    calendar.addEventSource(events);-->
                    },
                    error: function(error) {
                    console.error(`Error fetching dates: ${error}`);
                    }
                    });


                    <!--                    calendar = new FullCalendar.Calendar(calendarEl, {-->
                    <!--                    initialView: 'dayGridMonth', // Show day grid without specific times-->
                    <!--                    headerToolbar: {-->
                    <!--                    left: 'prev,next today',-->
                    <!--                    center: 'title',-->
                    <!--                    right: 'dayGridMonth' // Disable time grid views-->
                    <!--                    },-->
                    <!--                    events: [], // Fetch events if needed-->
                    <!--                    });-->

                    <!--                    // Fetch master dates using AJAX-->
                    <!--                    $.ajax({-->
                    <!--                    url: `/online-booking/master/`,-->
                    <!--                    data: {-->
                    <!--                    product_id: teacher_id-->
                    <!--                    },-->
                    <!--                    dataType: 'json',-->
                    <!--                    success: function(result) {-->
                    <!--                    // Prepare events array-->
                    <!--                    let events = result.map(item => ({-->
                    <!--                    title: item.name,-->
                    <!--                    start: item.date, // The date is already in ISO string format-->
                    <!--                    allDay: true-->
                    <!--                    }));-->
                    <!--                    console.info('events:', events);-->

                    <!--                    // Add events to the calendar-->
                    <!--                    calendar.addEventSource(events);-->
                    <!--                    },-->
                    <!--                    error: function(error) {-->
                    <!--                    console.error(`Error fetching dates: ${error}`);-->
                    <!--                    }-->
                    <!--                    });-->

                    } else {
                    // Initialize the calendar with time slots (for non-master product)
                    calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth', // Week view setting
                    headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay' // Optional: Add buttons to switch between week and day views
                    },
                    events: [], // This will be populated via AJAX
                    eventClick: function(info) {
                    // Get the clicked event
                    let clickedEvent = info.event;

                    // Get the current quantity from the input (number of available bookings)
                    let quantity = parseInt(document.getElementById('quantity').value, 10);

                    // Check if this event has already been selected
                    if (selectedBookings[clickedEvent.start]) {
                    // If the booking is already selected, deselect it
                    delete selectedBookings[clickedEvent.start];
                    clickedEvent.setProp('classNames', []); // Remove the custom class
                    } else {
                    // Only allow booking selection if the total selected bookings are less than the quantity
                    if (Object.keys(selectedBookings).length &lt; quantity) {
                    selectedBookings[clickedEvent.start] = 1; // Store the selected booking
                    clickedEvent.setProp('classNames', ['selected-booking']); // Add custom class for styling
                    }
                    else {
                        alert(`You can only select ${quantity} bookings.`);
                        }
                    }

                    // Disable or enable the "Book Now" button based on the number of selected bookings
                    if (Object.keys(selectedBookings).length === quantity) {
                    document.getElementById('add_to_cart_wrap').style.pointerEvents = 'auto'; // Enable the button
                    document.getElementById('add_to_cart_wrap').style.opacity = '1'; // Make the button fully visible
                    } else {
                    document.getElementById('add_to_cart_wrap').style.pointerEvents = 'none'; // Disable the button
                    document.getElementById('add_to_cart_wrap').style.opacity = '0.5'; // Make the button look disabled
                    }

                    // Send selected bookings to the server
                    $.ajax({
                    url: '/save_booking_to_session', // URL to the backend route
                    data: {
                    selected_book: JSON.stringify({ selected_book: selectedBookings }),
                    },
                    dataType: 'json',
                    success: function(response) {
                    console.log('Bookings saved to session:', response);
                    },
                    error: function(error) {
                    console.error(`Error saving bookings: ${error}`);
                    }
                    });
                    }
                    });

                    // Fetch bookings data using AJAX (for non-master product)
                    $.ajax({
                    url: '/get_booking_by_day',
                    data: {
                    teacher_id: teacher_id
                    },
                    dataType: 'json',
                    success: function(result) {
                    // Prepare events array
                    let events = [];
                    Object.keys(result).forEach(function(day) {
                    result[day].forEach(function(time) {
                    let fullDateTime = new Date(day + ' ' + time); // Combining day and time
                    events.push({
                    title: 'Available',
                    start: fullDateTime.toISOString(), // Convert to ISO string
                    allDay: false, // Event with time
                    });
                    });
                    });

                    // Add events to the calendar
                    calendar.addEventSource(events);
                    calendar.render();

                    },
                    error: function(error) {
                    console.error(`Error fetching bookings: ${error}`);
                    }
                    });
                    }

                    // Render the calendar
                    },
                    error: function(error) {
                    console.error(`Error checking master product: ${error}`);
                    }
                    });
                    });
                </script>


                <!--                <script>-->
                <!--    document.addEventListener('DOMContentLoaded', function() {-->
                <!--        let teacher_id = document.getElementById('product').value;-->
                <!--        let tt = document.getElementById('product');-->
                <!--        let selectedBookings = {};  // To store clicked bookings and associated quantities-->
                <!--                    console.info('product master &#45;&#45;&#45;&#45;&#45;&#45;',tt);-->

                <!--         $.ajax({-->
                <!--            url: '/check_master_product',-->
                <!--            data: {-->
                <!--                product_id: teacher_id  // Replace teacher_id with the actual product ID-->
                <!--            },-->
                <!--            dataType: 'json',-->
                <!--            success: function(response) {-->
                <!--                    console.info('response : ',response);-->
                <!--                if (response.is_master) {-->
                <!--                    // Initialize the calendar without time slots-->
                <!--                    let calendarEl = document.getElementById('calendar');-->
                <!--                    let calendar = new FullCalendar.Calendar(calendarEl, {-->
                <!--                        initialView: 'dayGridMonth', // Show day grid without specific times-->
                <!--                        headerToolbar: {-->
                <!--                            left: 'prev,next today',-->
                <!--                            center: 'title',-->
                <!--                            right: 'dayGridMonth'  // Disable time grid views-->
                <!--                        },-->
                <!--                        events: [],  // Fetch events if needed-->
                <!--                    });-->
                <!--                    calendar.render();-->
                <!--                } else {-->
                <!--                    alert('This product is not a master.');-->
                <!--                }-->
                <!--            },-->
                <!--            error: function(error) {-->
                <!--                console.error(`Error checking master product: ${error}`);-->
                <!--            }-->
                <!--        });-->

                <!--        // Initialize FullCalendar with week view-->
                <!--        let calendarEl = document.getElementById('calendar');-->
                <!--        let calendar = new FullCalendar.Calendar(calendarEl, {-->
                <!--            initialView: 'timeGridWeek',  // Week view setting-->
                <!--            headerToolbar: {-->
                <!--                left: 'prev,next today',-->
                <!--                center: 'title',-->
                <!--                right: 'timeGridWeek,timeGridDay'  // Optional: Add buttons to switch between week and day views-->
                <!--            },-->
                <!--            events: [],  // This will be populated via AJAX-->
                <!--            eventClick: function(info) {-->
                <!--                // Get the clicked event-->
                <!--                let clickedEvent = info.event;-->

                <!--                // Get the current quantity from the input (number of available bookings)-->
                <!--                let quantity = parseInt(document.getElementById('quantity').value, 10);-->

                <!--                // Check if this event has already been selected-->
                <!--                if (selectedBookings[clickedEvent.start]) {-->
                <!--                    // If the booking is already selected, deselect it-->
                <!--                    delete selectedBookings[clickedEvent.start];-->
                <!--                    clickedEvent.setProp('classNames', []);  // Remove the custom class-->
                <!--                } else {-->
                <!--                    // Only allow booking selection if the total selected bookings are less than the quantity-->
                <!--                    if (Object.keys(selectedBookings).length &lt; quantity) {-->
                <!--                        selectedBookings[clickedEvent.start] = 1;  // Store the selected booking-->
                <!--                        clickedEvent.setProp('classNames', ['selected-booking']);  // Add custom class for styling-->
                <!--                    } else {-->
                <!--                        alert(`You can only select ${quantity} bookings.`);-->
                <!--                    }-->
                <!--                }-->

                <!--                // Disable or enable the "Book Now" button based on the number of selected bookings-->
                <!--                if (Object.keys(selectedBookings).length === quantity) {-->
                <!--                    document.getElementById('add_to_cart_wrap').style.pointerEvents = 'auto';  // Enable the button-->
                <!--                    document.getElementById('add_to_cart_wrap').style.opacity = '1';  // Make the button fully visible-->
                <!--                } else {-->
                <!--                    document.getElementById('add_to_cart_wrap').style.pointerEvents = 'none';  // Disable the button-->
                <!--                    document.getElementById('add_to_cart_wrap').style.opacity = '0.5';  // Make the button look disabled-->
                <!--                }-->


                <!--                // Send selected bookings to the server-->
                <!--                $.ajax({-->
                <!--                    url: '/save_booking_to_session',  // URL to the backend route-->
                <!--                    data: {-->
                <!--                        selected_book: JSON.stringify({ selected_book: selectedBookings }),-->
                <!--                    },-->
                <!--                    dataType: 'json',-->
                <!--                    success: function(response) {-->
                <!--                        console.log('Bookings saved to session:', response);-->
                <!--                    },-->
                <!--                    error: function(error) {-->
                <!--                        console.error(`Error saving bookings: ${error}`);-->
                <!--                    }-->
                <!--                });-->
                <!--            }-->
                <!--        });-->

                <!--        // Render the calendar-->
                <!--        calendar.render();-->

                <!--        // Fetch bookings data using AJAX-->
                <!--        $.ajax({-->
                <!--            url: '/get_booking_by_day',-->
                <!--            data: {-->
                <!--                teacher_id: teacher_id-->
                <!--            },-->
                <!--            dataType: 'json',-->
                <!--            success: function(result) {-->
                <!--                // Prepare events array-->
                <!--                let events = [];-->
                <!--                Object.keys(result).forEach(function(day) {-->
                <!--                    result[day].forEach(function(time) {-->
                <!--                        let fullDateTime = new Date(day + ' ' + time);  // Combining day and time-->
                <!--                        events.push({-->
                <!--                            title: 'Available',-->
                <!--                            start: fullDateTime.toISOString(),  // Convert to ISO string-->
                <!--                            allDay: false,  // Event with time-->
                <!--                        });-->
                <!--                    });-->
                <!--                });-->

                <!--                // Add events to the calendar-->
                <!--                calendar.addEventSource(events);-->
                <!--            },-->
                <!--            error: function(error) {-->
                <!--                console.error(`Error fetching bookings: ${error}`);-->
                <!--            }-->
                <!--        });-->
                <!--                    $.ajax({-->
                <!--            url: `/online-booking/master/`,  // Adjust the URL to match your controller route-->
                <!--            data: {-->
                <!--                product_id: teacher_id-->
                <!--            },-->
                <!--            dataType: 'json',-->
                <!--            success: function(result) {-->
                <!--                // Prepare events array-->
                <!--                let events = result.map(item => ({-->
                <!--                    title: item.name,-->
                <!--                    start: item.date,  // The date is already in ISO string format-->
                <!--                    allDay: true-->
                <!--                }));-->
                <!--                    console.info('eveeeents',events );-->

                <!--                // Add events to the calendar-->
                <!--                calendar.addEventSource(events);-->
                <!--            },-->
                <!--            error: function(error) {-->
                <!--                console.error(`Error fetching dates: ${error}`);-->
                <!--            }-->
                <!--        });-->


                <!--    });-->
                <!--</script>-->


            </xpath>


            <!--            <xpath expr="//div[@id='product_detail_main']"-->
            <!--                   position="attributes">-->
            <!--                <attribute name="style">display:none !important;</attribute>-->
            <!--            </xpath>-->

            <!--            <xpath expr="//div[@id='product_detail_main']"-->
            <!--                   position="after">-->
            <!--                <div class="row">-->
            <!--                    <div class="col-lg-4 mt-4">-->
            <!--                        <h2 class="text-primary" t-field="product.name"/>-->
            <!--                        <hr/>-->

            <!--                        <h5>-->
            <!--                            <strong>-->
            <!--                                Package:-->
            <!--                            </strong>-->
            <!--                            <span class="text-secondary" t-out="request.session.get('package_id').get('name')"/>-->
            <!--                        </h5>-->


            <!--                        <h5>-->
            <!--                            <strong>-->
            <!--                                Price:-->
            <!--                            </strong>-->
            <!--                            <span class="text-secondary" t-out="request.session.get('package_id').get('price')"/>-->
            <!--                        </h5>-->


            <!--                    </div>-->
            <!--                    <div class="col-lg-8">-->

            <!--                        <style>-->
            <!--                            /* Style for the list */-->
            <!--                            .available-days-list {-->
            <!--                            list-style-type: none; /* Remove default bullet points */-->
            <!--                            padding: 0;-->
            <!--                            }-->

            <!--                            .available-days-list .day-item {-->
            <!--                            padding: 10px;-->
            <!--                            margin-bottom: 5px;-->
            <!--                            background-color: #f8f9fa; /* Light background for list items */-->
            <!--                            border: 1px solid #ddd;-->
            <!--                            border-radius: 5px;-->
            <!--                            font-size: 1.1rem;-->
            <!--                            cursor: pointer;-->
            <!--                            }-->

            <!--                            .available-days-list .day-item:hover {-->
            <!--                            background-color: #e9ecef; /* Slightly darker on hover */-->
            <!--                            }-->

            <!--                            /* Hide available times initially */-->
            <!--                            .available-times {-->
            <!--                            display: none;-->
            <!--                            margin-top: 10px;-->
            <!--                            background-color: #fff;-->
            <!--                            border: 1px solid #ddd;-->
            <!--                            padding: 10px;-->
            <!--                            border-radius: 5px;-->
            <!--                            }-->

            <!--                            /* Show available times when the div is clicked */-->
            <!--                            .available-times.show {-->
            <!--                            display: block;-->
            <!--                            }-->

            <!--                            /* Style for selected time */-->
            <!--                            .available-times ul li.selected {-->
            <!--                            background-color: #007bff; /* Blue background for selected time */-->
            <!--                            color: white; /* White text for selected time */-->
            <!--                            cursor: pointer;-->
            <!--                            }-->

            <!--                            .available-times ul li:hover {-->
            <!--                            background-color: #e9ecef; /* Slightly darker on hover */-->
            <!--                            cursor: pointer;-->
            <!--                            }-->

            <!--                            /* Disabled day item */-->
            <!--                            .day-item.disabled {-->
            <!--                            pointer-events: none;-->
            <!--                            opacity: 0.6; /* Make disabled days look faded */-->
            <!--                            }-->

            <!--                            /* Disabled time slot */-->
            <!--                            .available-times ul li.disabled {-->
            <!--                            pointer-events: none;-->
            <!--                            opacity: 0.6; /* Make disabled time slots look faded */-->
            <!--                            }-->
            <!--                        </style>-->
            <!--                        <t t-set="teacher"-->
            <!--                           t-value="request.env['voca.teacher'].sudo().search([('product_id', '=', product.product_variant_id.id)])"/>-->
            <!--                        <input type="hidden" t-att-value="product.id" id="product"></input>-->
            <!--                        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>-->
            <!--                        <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet"/>-->
            <!--                        <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>-->
            <!--                        <div id="calendar" style="width:100%"></div>-->
            <!--                        <style>-->
            <!--                            .selected-booking {-->
            <!--                            background-color: #4CAF50 !important; /* Green background */-->
            <!--                            color: white !important; /* White text */-->
            <!--                            }-->
            <!--                        </style>-->
            <!--                        <input type="hidden" id="selected_bookings" name="selected_bookings" value=""/>-->
            <!--                        <script>-->
            <!--                            document.addEventListener('DOMContentLoaded', function() {-->
            <!--                            let teacher_id = document.getElementById('product').value;-->
            <!--                            let selectedBookings = {}; // To store clicked bookings and associated quantities-->

            <!--                            // Initialize FullCalendar-->
            <!--                            let calendarEl = document.getElementById('calendar');-->
            <!--                            let calendar = new FullCalendar.Calendar(calendarEl, {-->
            <!--                            initialView: 'dayGridMonth', // View setting (you can change this)-->
            <!--                            events: [], // This will be populated via AJAX-->
            <!--                            eventClick: function(info) {-->
            <!--                            // Get the clicked event-->
            <!--                            let clickedEvent = info.event;-->

            <!--                            // Get the current quantity from the input-->
            <!--                            let quantity = document.getElementById('quantity').value;-->

            <!--                            if (selectedBookings[clickedEvent.start]) {-->
            <!--                            // If booking already exists, remove it and update session-->
            <!--                            delete selectedBookings[clickedEvent.start];-->
            <!--                            clickedEvent.setProp('classNames', []); // Remove the custom class-->
            <!--                            } else {-->
            <!--                            // Only add a new booking if the total selected bookings are less than quantity-->
            <!--                            if (Object.keys(selectedBookings).length &lt; quantity) {-->
            <!--                            selectedBookings[clickedEvent.start] = parseInt(quantity, 10);-->
            <!--                            clickedEvent.setProp('classNames', ['selected-booking']); // Add the custom class-->
            <!--                            } else {-->
            <!--                            alert(`You have reached the maximum number of bookings (${quantity}).`);-->
            <!--                            }-->
            <!--                            }-->

            <!--                            // Send selected bookings to the server-->
            <!--                            $.ajax({-->
            <!--                            url: '/save_booking_to_session', // URL to the backend route-->
            <!--                            data: {-->
            <!--                            selected_book: JSON.stringify({ selected_book: selectedBookings }),-->
            <!--                            },-->
            <!--                            dataType: 'json',-->
            <!--                            success: function(response) {-->
            <!--                            console.log('Bookings saved to session:', response);-->
            <!--                            },-->
            <!--                            error: function(error) {-->
            <!--                            console.error(`Error saving bookings: ${error}`);-->
            <!--                            }-->
            <!--                            });-->

            <!--                            console.log('Selected Bookings:', selectedBookings);-->
            <!--                            }-->
            <!--                            });-->

            <!--                            // Render the calendar-->
            <!--                            calendar.render();-->

            <!--                            // Fetch bookings data using AJAX-->
            <!--                            $.ajax({-->
            <!--                            url: '/get_booking_by_day',-->
            <!--                            data: {-->
            <!--                            teacher_id: teacher_id-->
            <!--                            },-->
            <!--                            dataType: 'json',-->
            <!--                            success: function(result) {-->
            <!--                            // Prepare events array-->
            <!--                            let events = [];-->
            <!--                            Object.keys(result).forEach(function(day) {-->
            <!--                            result[day].forEach(function(time) {-->
            <!--                            let fullDateTime = new Date(day + ' ' + time); // Combining day and time-->
            <!--                            events.push({-->
            <!--                            title: 'Available',-->
            <!--                            start: fullDateTime.toISOString(), // Convert to ISO string-->
            <!--                            allDay: false, // Event with time-->
            <!--                            });-->
            <!--                            });-->
            <!--                            });-->

            <!--                            // Add events to the calendar-->
            <!--                            calendar.addEventSource(events);-->
            <!--                            },-->
            <!--                            error: function(error) {-->
            <!--                            console.error(`Error fetching bookings: ${error}`);-->
            <!--                            }-->
            <!--                            });-->
            <!--                            });-->
            <!--                        </script>-->
            <!--                    </div>-->

            <!--                </div>-->

            <!--            </xpath>-->
        </template>


    </data>
</odoo>